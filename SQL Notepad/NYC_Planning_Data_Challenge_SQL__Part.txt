haoshengdb

host: 
haoshengdb.cdx7p6lhdmdz.us-east-2.rds.amazonaws.com

db name: 
haosheng_db 

user name: 
postgres 

password: 
nycplanning2023

....................................

CREATE TABLE sample_311 (
    unique_key INTEGER,
    created_date TIMESTAMP,
	agency VARCHAR,
	agency_name VARCHAR,
	complaint_type VARCHAR,
	descriptor VARCHAR,
	location_type VARCHAR,
	incident_zip INTEGER,
	incident_address VARCHAR,
	street_name VARCHAR,
	address_type VARCHAR,
	city VARCHAR,
	status VARCHAR,
	resolution_description VARCHAR,
	resolution_action_updated_date TIMESTAMP,
	community_board VARCHAR,
	bbl DECIMAL,
	borough VARCHAR,
	x_coordinate_state_plane INTEGER,
	y_coordinate_state_plane INTEGER,
	open_data_channel_type VARCHAR,
	park_facility_name VARCHAR,
	park_borough VARCHAR,
	latitude DECIMAL,
	longitude DECIMAL,
	location JSONB,
	closed_date TIMESTAMP
);

ALTER TABLE sample_311 ADD COLUMN id serial PRIMARY KEY;

ALTER TABLE sample_311
ADD COLUMN nta varchar(50);

...............................

CREATE TABLE time_series_raw AS
SELECT
  date_trunc('hour', created_date) AS created_date_hour,
  complaint_type,
  COUNT(*) AS count
FROM
  sample_311
GROUP BY
  created_date_hour,
  complaint_type;

...............................

CREATE EXTENSION postgis;

..............................
CREATE TABLE NTA (
    x FLOAT,
    city VARCHAR(50),
    name VARCHAR(255),
    activated TIMESTAMP,
    ntacode VARCHAR(10),
    location VARCHAR(255),
    provider VARCHAR(255),
    coundist VARCHAR(10),
    y FLOAT,
    ntaname VARCHAR(255),
    location_t VARCHAR(50),
    ssid VARCHAR(255),
    postcode VARCHAR(10),
    bbl VARCHAR(20),
    borocd VARCHAR(10),
    objectid VARCHAR(10),
    boroname VARCHAR(50),
    sourceid VARCHAR(20),
    boroct2010 VARCHAR(10),
    boro VARCHAR(2),
    lon FLOAT,
    remarks TEXT,
    ct2010 VARCHAR(10),
    borocode VARCHAR(10),
    bin VARCHAR(20),
    type VARCHAR(20),
    doitt_id VARCHAR(10),
    lat FLOAT,
    geom GEOMETRY(Point, 4326)
);

...............................

SELECT s.*, n.*
FROM sample_311 s
LEFT JOIN nta n
ON ST_Intersects(s.geom, n.geom)

...............................
distance join:

UPDATE sample_311
SET nta = nta_table.ntacode
FROM (
  SELECT
    sample_311.id, nta.ntacode,
    ST_Distance(sample_311.geom, nta.geom) AS distance
  FROM
    sample_311
    CROSS JOIN LATERAL (
      SELECT *
      FROM nta
      ORDER BY sample_311.geom <-> nta.geom ASC
      LIMIT 1
    ) AS nta
) AS nta_table
WHERE sample_311.id = nta_table.id;

....................................

CREATE TABLE recent_appliance_complaints AS
SELECT nta,
       COUNT(*) AS count,
       nta.geom AS geom
FROM (
  SELECT unique_key, 
         complaint_type, 
         nta, 
         DATE_TRUNC('day', created_date) AS date_trunc
  FROM sample_311
  WHERE complaint_type = 'APPLIANCE'
    AND created_date >= CURRENT_DATE - INTERVAL '7 day'
) AS recent_complaints
JOIN nta ON recent_complaints.nta = nta.ntacode
GROUP BY nta, nta.geom;

.......................................


